<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">
    <!-- This is the XML way to define jobs but it will be very handy if you already have jobs like this -->

    <!--<import resource="classpath:/META-INF/spring/batch/jobs/xml-job.xml"/>-->

    <bean id="myStep" class="com.ityj.batch.tasklet.MyTestTasklet"/>
    <bean id="myStep2" class="com.ityj.batch.tasklet.MyTestTasklet2"/>
    <bean id="myStep3" class="com.ityj.batch.tasklet.MyTestTasklet3"/>

    <batch:job id="deciderJob">
        <batch:step id="first" next="decision">
            <tasklet ref="myStep" />
        </batch:step>

        <batch:decision id="decision" decider="decider">
            <batch:next on="SKIP" to="endStep" />
            <batch:next on="CONTINUE" to="nextStep" />
        </batch:decision>

        <batch:step id="nextStep" next="endStep">
            <batch:tasklet ref="myStep2"/>
        </batch:step>

        <batch:step id="endStep">
            <!--<batch:tasklet ref="myStep3"/>-->
            <batch:job ref="helloJobWithXml222"/>
        </batch:step>
    </batch:job>

    <bean id="decider" class="com.ityj.batch.decider.MyJobExecutionDecider" />

    <batch:job id="helloJobWithXml222">
        <batch:step id="stepTest01">
            <batch:tasklet ref="myStep"/>
        </batch:step>
    </batch:job>


</beans>